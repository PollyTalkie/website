---
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import { Logo } from './ui/Logo';
import { URLS } from '../lib/env';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const navigation = [
  { name: t('nav.pricing'), href: `/${lang === 'en' ? '' : lang + '/'}pricing` },
  { name: t('nav.blog'), href: `/${lang === 'en' ? '' : lang + '/'}blog` },
  { name: t('nav.download'), href: `/${lang === 'en' ? '' : lang + '/'}download` },
  { name: t('nav.terms'), href: `/${lang === 'en' ? '' : lang + '/'}terms` },
  { name: t('nav.privacy'), href: `/${lang === 'en' ? '' : lang + '/'}privacy` },
];

const currentPath = Astro.url.pathname;
---

<header class="fixed inset-x-0 top-0 z-50 backdrop-blur-sm bg-background/80 border-b border-border">
  <nav class="flex items-center justify-between p-6 lg:px-8 mx-auto max-w-7xl" aria-label="Global">
    <div class="flex lg:w-1/5">
      <a href={lang === 'en' ? '/' : `/${lang}/`} class="-m-1.5 p-1.5 flex items-center gap-1">
        <Logo size={28} locale={lang} client:load />
        <span class="font-semibold text-lg">
          {lang === 'zh' ? '博语通' : 'PollyTalkie'}
          {lang === 'zh' && <span class="text-xs ml-1 text-muted-foreground">(PollyTalkie)</span>}
        </span>
      </a>
    </div>
    
    <!-- Mobile menu button -->
    <div class="flex lg:hidden items-center gap-2">
      <div class="language-switcher">
        <a href={lang === 'en' ? '/zh/' : '/'} class="text-sm px-2 py-1 rounded hover:bg-muted">
          {lang === 'en' ? '中文' : 'EN'}
        </a>
      </div>
      <button
        type="button"
        class="mobile-menu-toggle -m-2.5 inline-flex items-center justify-center rounded-md p-2.5"
        aria-label="Open main menu"
      >
        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
        </svg>
      </button>
    </div>
    
    <!-- Desktop navigation -->
    <div class="hidden lg:flex lg:gap-x-8">
      {navigation.map((item) => (
        <a
          href={item.href}
          class={`text-sm font-semibold leading-6 transition-colors hover:text-primary ${
            currentPath === item.href || currentPath === item.href + '/' ? 'text-primary' : 'text-muted-foreground'
          }`}
        >
          {item.name}
        </a>
      ))}
    </div>
    
    <!-- Desktop language switcher and CTA -->
    <div class="hidden lg:flex lg:flex-1 lg:justify-end gap-5 items-center">
      <div class="language-switcher">
        <a href={lang === 'en' ? '/zh/' : '/'} class="text-sm px-3 py-1 rounded-md border border-input bg-background hover:bg-accent hover:text-accent-foreground transition-colors">
          {lang === 'en' ? '中文' : 'English'}
        </a>
      </div>
      <a
        href={URLS.portal.signin}
        class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2"
      >
        {t('nav.downloadApp')}
      </a>
    </div>
  </nav>
  
  <!-- Mobile menu -->
  <div class="mobile-menu hidden lg:hidden fixed inset-0 z-50 bg-background/80 backdrop-blur-sm">
    <div class="fixed inset-y-0 right-0 z-50 w-full overflow-y-auto bg-background px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-border">
      <div class="flex items-center justify-between">
        <a href={lang === 'en' ? '/' : `/${lang}/`} class="-m-1.5 p-1.5 flex items-center gap-1">
          <Logo size={28} locale={lang} client:load />
          <span class="font-semibold text-lg">
            {lang === 'zh' ? '博语通' : 'PollyTalkie'}
          </span>
        </a>
        <button type="button" class="mobile-menu-close -m-2.5 rounded-md p-2.5">
          <span class="sr-only">Close menu</span>
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <div class="mt-6 flow-root">
        <div class="-my-6 divide-y divide-border">
          <div class="space-y-2 py-6">
            {navigation.map((item) => (
              <a
                href={item.href}
                class="block rounded-lg px-3 py-2 text-base font-semibold leading-7 hover:bg-muted"
              >
                {item.name}
              </a>
            ))}
          </div>
          <div class="py-6 space-y-4">
            <a href={lang === 'en' ? '/zh/' : '/'} class="block text-sm px-3 py-2 rounded-md border border-input bg-background hover:bg-accent">
              {lang === 'en' ? '中文' : 'English'}
            </a>
            <a
              href={URLS.portal.signin}
              class="block w-full text-center rounded-md bg-primary px-3 py-2.5 text-sm font-semibold text-primary-foreground shadow-sm hover:bg-primary/90"
            >
              {t('nav.downloadApp')}
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu functionality
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuToggle = document.querySelector('.mobile-menu-toggle');
    const mobileMenuClose = document.querySelector('.mobile-menu-close');
    const mobileMenu = document.querySelector('.mobile-menu');
    
    if (mobileMenuToggle && mobileMenu) {
      mobileMenuToggle.addEventListener('click', function() {
        mobileMenu.classList.remove('hidden');
      });
    }
    
    if (mobileMenuClose && mobileMenu) {
      mobileMenuClose.addEventListener('click', function() {
        mobileMenu.classList.add('hidden');
      });
    }
    
    // Close mobile menu when clicking outside
    if (mobileMenu) {
      mobileMenu.addEventListener('click', function(e) {
        if (e.target === mobileMenu) {
          mobileMenu.classList.add('hidden');
        }
      });
    }
  });
</script>
