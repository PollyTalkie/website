---
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import { Logo } from './ui/Logo';
import { URLS } from '../lib/env';
import { QRCodeDisplay } from './QRCodeDisplay';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const navigation = [
  { name: t('nav.pricing'), href: `/${lang}/pricing` },
  { name: t('nav.download'), href: `/${lang}/download` },
];

const currentPath = Astro.url.pathname;

// Smart language switcher - preserve current page when switching languages
function getLanguageSwitchUrl(currentLang: string, targetLang: string, currentPath: string): string {
  // Get the base path without any language prefix
  let basePath = currentPath;
  
  // Remove current language prefix (both /en and /zh)
  if (currentLang === 'zh') {
    basePath = currentPath.replace('/zh', '') || '/';
  } else if (currentLang === 'en') {
    basePath = currentPath.replace('/en', '') || '/';
  }
  
  // Build target URL with target language prefix
  return `/${targetLang}${basePath === '/' ? '' : basePath}`;
}

const languageSwitchUrl = getLanguageSwitchUrl(lang, lang === 'en' ? 'zh' : 'en', currentPath);
---

<header class="fixed inset-x-0 top-0 z-50 backdrop-blur-sm bg-background/80 border-b border-border">
  <nav class="flex items-center justify-between p-6 lg:px-8 mx-auto max-w-7xl" aria-label="Global">
    <div class="flex lg:w-1/5">
      <a href={`/${lang}/`} class="-m-1.5 p-1.5 flex items-center gap-1">
        <Logo size={28} locale={lang} client:load />
        <span class="font-semibold text-lg">
          {lang === 'zh' ? '博语通' : 'PollyTalkie'}
          {lang === 'zh' && <span class="text-xs ml-1 text-muted-foreground">(PollyTalkie)</span>}
        </span>
      </a>
    </div>
    
    <!-- Mobile menu button -->
    <div class="flex lg:hidden items-center gap-2">
      <div class="language-switcher">
        <a href={languageSwitchUrl} class="text-sm px-2 py-1 rounded hover:bg-muted">
          {lang === 'en' ? '中文' : 'EN'}
        </a>
      </div>
      <button
        type="button"
        class="mobile-menu-toggle -m-2.5 inline-flex items-center justify-center rounded-md p-2.5"
        aria-label="Open main menu"
      >
        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
        </svg>
      </button>
    </div>
    
    <!-- Desktop navigation -->
    <div class="hidden lg:flex lg:gap-x-8">
      {navigation.map((item) => (
        <a
          href={item.href}
          class={`text-sm font-semibold leading-6 transition-colors hover:text-primary ${
            currentPath === item.href || currentPath === item.href + '/' ? 'text-primary' : 'text-muted-foreground'
          }`}
        >
          {item.name}
        </a>
      ))}
    </div>
    
    <!-- Desktop language switcher and CTA -->
    <div class="hidden lg:flex lg:flex-1 lg:justify-end gap-5 items-center">
      <div class="language-switcher">
        <a href={languageSwitchUrl} class="text-sm px-3 py-1 rounded-md border border-input bg-background hover:bg-accent hover:text-accent-foreground transition-colors">
          {lang === 'en' ? '中文' : 'English'}
        </a>
      </div>
      <div class="relative group">
        <button
          type="button"
          class="flex items-center justify-center gap-2 px-3 py-1.5 rounded-md border border-border bg-accent/30 text-foreground hover:bg-accent hover:text-primary transition-all"
          aria-label="Show QR code for app download"
        >
          <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <rect x="3" y="3" width="5" height="5" stroke-width="2"/>
            <rect x="3" y="16" width="5" height="5" stroke-width="2"/>
            <rect x="16" y="3" width="5" height="5" stroke-width="2"/>
            <rect x="5" y="5" width="1" height="1" fill="currentColor"/>
            <rect x="5" y="18" width="1" height="1" fill="currentColor"/>
            <rect x="18" y="5" width="1" height="1" fill="currentColor"/>
            <rect x="11" y="11" width="2" height="2" stroke-width="1"/>
            <rect x="16" y="16" width="2" height="2" stroke-width="1"/>
            <rect x="3" y="11" width="2" height="2" stroke-width="1"/>
            <rect x="11" y="3" width="2" height="2" stroke-width="1"/>
          </svg>
          <span class="text-sm font-medium">{t('nav.downloadApp')}</span>
        </button>
        <div class="absolute right-0 top-full mt-2 p-4 bg-background border-2 border-primary/20 rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible scale-95 group-hover:scale-100 transition-all duration-300 z-50">
          <QRCodeDisplay size={180} locale={lang} client:load />
        </div>
      </div>
    </div>
  </nav>
  
  <!-- Mobile menu -->
  <div class="mobile-menu hidden lg:hidden fixed inset-0 z-50 bg-background/80 backdrop-blur-sm">
    <div class="fixed inset-y-0 right-0 z-50 w-full overflow-y-auto bg-background px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-border">
      <div class="flex items-center justify-between">
        <a href={`/${lang}/`} class="-m-1.5 p-1.5 flex items-center gap-1">
          <Logo size={28} locale={lang} client:load />
          <span class="font-semibold text-lg">
            {lang === 'zh' ? '博语通' : 'PollyTalkie'}
          </span>
        </a>
        <button type="button" class="mobile-menu-close -m-2.5 rounded-md p-2.5">
          <span class="sr-only">Close menu</span>
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <div class="mt-6 flow-root">
        <div class="-my-6 divide-y divide-border">
          <div class="space-y-2 py-6">
            {navigation.map((item) => (
              <a
                href={item.href}
                class="block rounded-lg px-3 py-2 text-base font-semibold leading-7 hover:bg-muted"
              >
                {item.name}
              </a>
            ))}
          </div>
          <div class="py-6 space-y-4">
            <a href={languageSwitchUrl} class="block text-sm px-3 py-2 rounded-md border border-input bg-background hover:bg-accent">
              {lang === 'en' ? '中文' : 'English'}
            </a>
            <div class="flex justify-center">
              <QRCodeDisplay size={120} locale={lang} client:load />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu functionality
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuToggle = document.querySelector('.mobile-menu-toggle');
    const mobileMenuClose = document.querySelector('.mobile-menu-close');
    const mobileMenu = document.querySelector('.mobile-menu');
    
    if (mobileMenuToggle && mobileMenu) {
      mobileMenuToggle.addEventListener('click', function() {
        mobileMenu.classList.remove('hidden');
      });
    }
    
    if (mobileMenuClose && mobileMenu) {
      mobileMenuClose.addEventListener('click', function() {
        mobileMenu.classList.add('hidden');
      });
    }
    
    // Close mobile menu when clicking outside
    if (mobileMenu) {
      mobileMenu.addEventListener('click', function(e) {
        if (e.target === mobileMenu) {
          mobileMenu.classList.add('hidden');
        }
      });
    }
  });
</script>
